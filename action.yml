name: "JMH Benchmark Action"
description: "Runs JMH benchmarks on PR and base branch, then compares results"
author: "Your Name"

inputs:
  java-version:
    description: "Java version to use"
    required: true
    default: "11"
  base-ref:
    description: "Reference for the base branch (e.g., 'main', 'master', commit SHA)"
    required: true
  benchmark-command:
    description: "Command to execute the benchmark"
    required: true
  github-token:
    description: "GitHub token for posting comments"
    required: true
  benchmark-file:
    description: "Path to the benchmark results file"
    required: true
    default: "benchmark.json"

runs:
  using: "composite"
  steps:
    - name: Check out PR branch
      uses: actions/checkout@v4
      with:
        path: pr
    - name: Check out base branch
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.base-ref }}
        path: base
    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: ${{ inputs.java-version }}
    - name: Set up Groovy
      uses: wtfjoke/setup-groovy@v2
      with:
        groovy-version: '4.x'
    - name: Run benchmarks on base branch
      run: |
        cd base
        ${{ inputs.benchmark-command }}
      shell: bash
    - name: Run benchmarks on PR branch
      run: |
        cd pr
        ${{ inputs.benchmark-command }}
      shell: bash
    - name: Compare benchmark results with Groovy
      run: groovy compare.groovy
      shell: bash
    - name: Post a Comment with Benchmark Results
      uses: actions/github-script@v7
      with:
        github-token: ${{ inputs.github-token }}
        script: |
          const fs = require('fs');
          const path = 'benchmark-comment.md';
          let commentBody = '';
          if (fs.existsSync(path)) {
            commentBody = fs.readFileSync(path, 'utf8');
          } else {
            commentBody = 'No benchmark comparison available.';
          }
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: commentBody
          });
